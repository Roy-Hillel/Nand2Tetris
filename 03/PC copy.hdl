// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Register(in[0]=false, load=reset, out=outReset);
    Not(in=reset, out=notReset);
    And(a=notReset, b=load, out=notResetAndLoad);
    Register(in=in, load=notResetAndLoad, out=outLoad);
    Inc16(in=outReset, out=outInc);
    Nand(a=reset, b=load, out=outNand);
    And(a=outNand, b=inc, out=outIncTrue);
    Mux16(a=outReset, b=outInc, sel=outIncTrue, out=outIncMux);
    Register(in=outIncMux, load=outIncTrue, out=out);
}
